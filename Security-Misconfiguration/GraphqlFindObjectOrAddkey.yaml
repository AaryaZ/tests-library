id: GRAPHQL_FIND_OBJECTS_OR_ADD_KEYS
info:
  name: "Graphql Find Objects And Add Keys"
  description: "Testing object retrieval helps confirm that the GraphQL queries are returning the expected objects with the necessary fields.The keys or fields are added as expected to the objects helps in ensuring data consistency."
  details: > 
            "Testing object retrieval in a GraphQL API is crucial to ensure that queries return the expected objects with the necessary fields, validating data accuracy. Additionally, testing mutation requests is essential to confirm the API's ability to correctly modify data, safeguarding data consistency. Verifying that keys or fields are added as anticipated helps prevent unintended issues such as incorrect data additions or data corruption. In summary, thorough testing is vital for maintaining data integrity, functionality, and overall API reliability."
  impact: "Data inaccuracies, functional disruptions, and potential security vulnerabilities. This can result in user confusion, operational issues, and brand reputation damage. "
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: GRAPHQL_FIND_OBJECTS_OR_ADD_KEYS
  severity: HIGH
  tags:
    - GraphQL
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.freecodecamp.org/news/building-consuming-and-documenting-a-graphql-api/"
    - "https://nostarch.com/black-hat-graphql Chapter 6 - Information Disclosure"
    - "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/12-API_Testing/01-Testing_GraphQL"
    - "https://0xn3va.gitbook.io/cheat-sheets/web-application/graphql-vulnerabilities"
  cwe:
    - CWE-16

api_selection_filters:
  url:
    regex: graphql

execute:
  type: single
  requests:
    - req:
      - modify_url:
          regex_replace:
            regex: graphql.*
            replace_with: graphql
      
      - test_data:
          object_name: "TestObject"
          keys_to_add:
            - "key1"
            - "key2"
            - "key3"


validate:
  response_payload:
    contains_either:
      - "stack" 
      - "exception"

strategy:
  run_once: /