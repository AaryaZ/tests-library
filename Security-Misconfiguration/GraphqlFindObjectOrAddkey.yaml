id: GRAPHQL_FIND_OBJECTS_OR_ADD_KEYS
info:
  name: Graphql Find Objects And Add Keys Custom 1698656338
  description: Testing object retrieval helps confirm that the GraphQL queries are returning the expected objects with the necessary fields.The keys or fields are added as expected to the objects helps in ensuring data consistency.
  details: |
    "Testing object retrieval in a GraphQL API is crucial to ensure that queries return the expected objects with the necessary fields, validating data accuracy. Additionally, testing mutation requests is essential to confirm the API's ability to correctly modify data, safeguarding data consistency. Verifying that keys or fields are added as anticipated helps prevent unintended issues such as incorrect data additions or data corruption. In summary, thorough testing is vital for maintaining data integrity, functionality, and overall API reliability."
  impact: "Data inaccuracies, functional disruptions, and potential security vulnerabilities. This can result in user confusion, operational issues, and brand reputation damage. "
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: GRAPHQL_FIND_OBJECTS_OR_ADD_KEYS
  severity: HIGH
  tags:
  - GraphQL
  - Business logic
  - OWASP top 10
  - HackerOne top 10
  references:
  - https://www.freecodecamp.org/news/building-consuming-and-documenting-a-graphql-api/
  - https://nostarch.com/black-hat-graphql Chapter 6 - Information Disclosure
  - https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/12-API_Testing/01-Testing_GraphQL
  - https://0xn3va.gitbook.io/cheat-sheets/web-application/graphql-vulnerabilities
  cwe:
  - CWE-16
api_selection_filters:
  url:
    regex: graphql
test_cases:
- name: Find and Modify Objects
  steps:
  - name: Find Objects
    description: Send a GraphQL query to find objects
    requests:
      method: POST
      url: https://your-graphql-api-endpoint
      headers:
        Authorization: Bearer your-access-token
      body:
        query: |
          query {
            objects {
              id
              name
            }
          }
    response:
      status: 200
      body:
        data:
          objects:
          - id: 1
            name: Object 1
          - id: 2
            name: Object 2
    variables:
      foundObjects: $.response.data.objects
  - name: Add Keys to Objects
    description: Modify the found objects and add keys
    script: |
      for (let obj of $.variables.foundObjects) {
        obj.newKey = "New Value";
      }
  - name: Update Objects
    description: Send a GraphQL mutation to update objects
    requests:
      method: POST
      url: https://your-graphql-api-endpoint
      headers:
        Authorization: Bearer your-access-token
      body:
        query: |
          mutation ($modifiedObjects: [ObjectTypeInput]) {
            updateObjects(input: $modifiedObjects) {
              success
            }
          }
        variables:
          modifiedObjects: $.variables.foundObjects
    response:
      status: 200
      body:
        data:
          updateObjects:
            success: true
  - name: Verify Object Key Addition
    description: Send a GraphQL query to retrieve the modified objects
    requests:
      method: POST
      url: https://your-graphql-api-endpoint
      headers:
        Authorization: Bearer your-access-token
      body:
        query: |
          query {
            objects {
              id
              name
              newKey
            }
          }
    response:
      status: 200
      body:
        data:
          objects:
          - id: 1
            name: Object 1
            newKey: New Value
          - id: 2
            name: Object 2
            newKey: New Value
strategy:
  run_once: /
